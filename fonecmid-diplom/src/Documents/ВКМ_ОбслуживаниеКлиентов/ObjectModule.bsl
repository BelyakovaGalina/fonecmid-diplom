
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОплатаЗаЧасРаботы = 0;
	
	Если Справочники.ДоговорыКонтрагентов.ЕстьДоговорСТипомАбонентскаяПлатаНаДату(Договор,Дата,,ОплатаЗаЧасРаботы) Тогда
		// регистр ВКМ_ВыполненныеКлиентуРаботы
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		
		ЧасыКОплате = ПолучитьОбщееКоличествоЧасовКОплате(Ссылка);
		
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ЧасыКОплате;
		Движение.СуммаКОплате = Движение.КоличествоЧасов * ОплатаЗаЧасРаботы;
		
	Иначе
		
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Выбранный договор не соответствует условиям: 
			|Вид договора должен принимать значение Абонентское обслуживание,
			|Дата документа должна лежать между датами начала и окончания действия договора'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	
	КонецЕсли;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ//TODO: Вставить содержимое обработчика
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьОбщееКоличествоЧасовКОплате(СсылкаНаДокумент)
	
	ЧасыКОплате = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Представление
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка.Представление";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЧасыКОплате = Выборка.ЧасыКОплатеКлиенту;
	КонецЕсли;
	
	Возврат ЧасыКОплате; 
	
КонецФункции

#КонецОбласти

#КонецЕсли
